{"ast":null,"code":"import Vue from \"vue\";\n// Vuex是个对象\nimport Vuex from \"vuex\";\n// 需要使用一次插件\nVue.use(Vuex);\n\n// state:仓库存储数据的地方\nconst state = {\n  count: 1\n};\n// mutations:修改state的唯一手段\nconst mutations = {\n  ADD(state, count) {\n    state.count++;\n  }\n};\n// action:处理action的地方，可以书写自己的业务逻辑，也可以处理异步\nconst actions = {\n  add({\n    commit\n  }) {\n    commit(\"ADD\");\n  }\n};\n// getters:理解为计算属性，用于简化仓库数据，让组件获取仓库的数据更加方便\nconst getters = {};\n\n// 对外暴露store类的实例\nexport default new Vuex.Store({\n  state,\n  mutations,\n  actions,\n  getters\n});","map":{"version":3,"names":["Vue","Vuex","use","state","count","mutations","ADD","actions","add","commit","getters","Store"],"sources":["C:/Web-Project/Project-SPH/app/src/store/index.js"],"sourcesContent":["import Vue from \"vue\"\r\n// Vuex是个对象\r\nimport Vuex from \"vuex\"\r\n// 需要使用一次插件\r\nVue.use(Vuex)\r\n\r\n// state:仓库存储数据的地方\r\nconst state = {\r\n   count:1\r\n}\r\n// mutations:修改state的唯一手段\r\nconst mutations = {\r\n   ADD(state,count){\r\n      state.count++\r\n   }\r\n}\r\n// action:处理action的地方，可以书写自己的业务逻辑，也可以处理异步\r\nconst actions = {\r\n   add({commit}){\r\n      commit(\"ADD\")\r\n   }\r\n}\r\n// getters:理解为计算属性，用于简化仓库数据，让组件获取仓库的数据更加方便\r\nconst getters = {}\r\n\r\n\r\n// 对外暴露store类的实例\r\nexport default new Vuex.Store({\r\n   state,\r\n   mutations,\r\n   actions,\r\n   getters\r\n})"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB;AACA,OAAOC,IAAI,MAAM,MAAM;AACvB;AACAD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;;AAEb;AACA,MAAME,KAAK,GAAG;EACXC,KAAK,EAAC;AACT,CAAC;AACD;AACA,MAAMC,SAAS,GAAG;EACfC,GAAG,CAACH,KAAK,EAACC,KAAK,EAAC;IACbD,KAAK,CAACC,KAAK,EAAE;EAChB;AACH,CAAC;AACD;AACA,MAAMG,OAAO,GAAG;EACbC,GAAG,CAAC;IAACC;EAAM,CAAC,EAAC;IACVA,MAAM,CAAC,KAAK,CAAC;EAChB;AACH,CAAC;AACD;AACA,MAAMC,OAAO,GAAG,CAAC,CAAC;;AAGlB;AACA,eAAe,IAAIT,IAAI,CAACU,KAAK,CAAC;EAC3BR,KAAK;EACLE,SAAS;EACTE,OAAO;EACPG;AACH,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}