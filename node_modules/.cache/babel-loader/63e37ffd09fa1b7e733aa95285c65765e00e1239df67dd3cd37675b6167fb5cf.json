{"ast":null,"code":"import { reqCartList, reqDeleteCartById, reqUpdateChekedByid } from '@/api';\nconst state = {\n  cartList: []\n};\nconst mutations = {\n  GETCARTLIST(state, cartList) {\n    state.cartList = cartList;\n  }\n};\nconst actions = {\n  // 获取购物车列表数据\n  async getCartList({\n    commit\n  }) {\n    let result = await reqCartList();\n    if (result.code == 200) {\n      commit('GETCARTLIST', result.data);\n    }\n  },\n  // 删除购物车某一物品\n  async deleteCartListBySkuId({\n    commit\n  }, skyId) {\n    let result = await reqDeleteCartById(skyId);\n    if (result.code == 200) {\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  },\n  // 修改购物车选择状态\n  async updateChekedById({\n    commit\n  }, {\n    skuId,\n    isChecked\n  }) {\n    let result = await reqUpdateChekedByid(skuId, isChecked);\n    if (result.code == 200) {\n      return 'ok';\n    } else {\n      return new Promise.reject(new Error('faile'));\n    }\n  }\n};\nconst getters = {\n  cartList(state) {\n    return state.cartList[0] || {};\n  }\n};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["reqCartList","reqDeleteCartById","reqUpdateChekedByid","state","cartList","mutations","GETCARTLIST","actions","getCartList","commit","result","code","data","deleteCartListBySkuId","skyId","Promise","reject","Error","updateChekedById","skuId","isChecked","getters"],"sources":["C:/Web-Project/Project-SPH/app/src/store/shopcart/index.js"],"sourcesContent":["import {reqCartList,reqDeleteCartById,reqUpdateChekedByid} from '@/api'\r\n\r\nconst state = {\r\n    cartList:[]\r\n}\r\nconst mutations = {\r\n    GETCARTLIST(state,cartList){\r\n        state.cartList=cartList\r\n    }\r\n}\r\nconst actions = { \r\n    // 获取购物车列表数据\r\n    async getCartList({commit}){\r\n        let result = await reqCartList()\r\n        if(result.code==200){\r\n            commit('GETCARTLIST',result.data)\r\n        }\r\n    },\r\n    // 删除购物车某一物品\r\n    async deleteCartListBySkuId({commit},skyId){\r\n        let result = await reqDeleteCartById(skyId)\r\n        if(result.code==200){\r\n            return 'ok'\r\n        }\r\n        else{\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    // 修改购物车选择状态\r\n    async updateChekedById({commit},{skuId,isChecked}){\r\n        let result = await reqUpdateChekedByid(skuId,isChecked)\r\n        if(result.code==200){\r\n            return 'ok'\r\n        }else{\r\n            return new Promise.reject(new Error('faile'))\r\n        }\r\n    }\r\n\r\n}\r\nconst getters =  {\r\n    cartList(state){\r\n        return state.cartList[0]||{}\r\n    }\r\n}\r\n\r\n\r\nexport default{\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"],"mappings":"AAAA,SAAQA,WAAW,EAACC,iBAAiB,EAACC,mBAAmB,QAAO,OAAO;AAEvE,MAAMC,KAAK,GAAG;EACVC,QAAQ,EAAC;AACb,CAAC;AACD,MAAMC,SAAS,GAAG;EACdC,WAAW,CAACH,KAAK,EAACC,QAAQ,EAAC;IACvBD,KAAK,CAACC,QAAQ,GAACA,QAAQ;EAC3B;AACJ,CAAC;AACD,MAAMG,OAAO,GAAG;EACZ;EACA,MAAMC,WAAW,CAAC;IAACC;EAAM,CAAC,EAAC;IACvB,IAAIC,MAAM,GAAG,MAAMV,WAAW,EAAE;IAChC,IAAGU,MAAM,CAACC,IAAI,IAAE,GAAG,EAAC;MAChBF,MAAM,CAAC,aAAa,EAACC,MAAM,CAACE,IAAI,CAAC;IACrC;EACJ,CAAC;EACD;EACA,MAAMC,qBAAqB,CAAC;IAACJ;EAAM,CAAC,EAACK,KAAK,EAAC;IACvC,IAAIJ,MAAM,GAAG,MAAMT,iBAAiB,CAACa,KAAK,CAAC;IAC3C,IAAGJ,MAAM,CAACC,IAAI,IAAE,GAAG,EAAC;MAChB,OAAO,IAAI;IACf,CAAC,MACG;MACA,OAAOI,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC7C;EACJ,CAAC;EACD;EACA,MAAMC,gBAAgB,CAAC;IAACT;EAAM,CAAC,EAAC;IAACU,KAAK;IAACC;EAAS,CAAC,EAAC;IAC9C,IAAIV,MAAM,GAAG,MAAMR,mBAAmB,CAACiB,KAAK,EAACC,SAAS,CAAC;IACvD,IAAGV,MAAM,CAACC,IAAI,IAAE,GAAG,EAAC;MAChB,OAAO,IAAI;IACf,CAAC,MAAI;MACD,OAAO,IAAII,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC,CAAC;IACjD;EACJ;AAEJ,CAAC;AACD,MAAMI,OAAO,GAAI;EACbjB,QAAQ,CAACD,KAAK,EAAC;IACX,OAAOA,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC;EAChC;AACJ,CAAC;AAGD,eAAc;EACVD,KAAK;EACLE,SAAS;EACTE,OAAO;EACPc;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}