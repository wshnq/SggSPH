{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reqCartList, reqDeleteCartById, reqUpdateChekedByid } from '@/api';\nconst state = {\n  cartList: []\n};\nconst mutations = {\n  GETCARTLIST(state, cartList) {\n    state.cartList = cartList;\n  }\n};\nconst actions = {\n  // 获取购物车列表数据\n  async getCartList({\n    commit\n  }) {\n    let result = await reqCartList();\n    if (result.code == 200) {\n      commit('GETCARTLIST', result.data);\n    }\n  },\n  // 删除购物车某一物品\n  async deleteCartListBySkuId({\n    commit\n  }, skyId) {\n    let result = await reqDeleteCartById(skyId);\n    if (result.code == 200) {\n      return 'ok';\n    } else {\n      return Promise.reject(new Error('faile'));\n    }\n  },\n  // 修改购物车选择状态\n  async updateChekedById({\n    commit\n  }, {\n    skuId,\n    isChecked\n  }) {\n    let result = await reqUpdateChekedByid(skuId, isChecked);\n    if (result.code == 200) {\n      return 'ok';\n    } else {\n      return new Promise.reject(new Error('faile'));\n    }\n  },\n  // 删除所有勾选的商品\n  deleteAllCheckedCart({\n    dispatch,\n    getters\n  }) {\n    // context可以理解为一个小仓库\n    // commit 提交mutations修改state    getters 计算属性    dispatch 派发action     state 当前仓库数据\n    let PromiseAll = [];\n    getters.cartList.cartInfoList.forEach(e => {\n      PromiseAll.push(e.isChecked == 1 ? dispatch('deleteCartListBySkuId', e.skuId) : '');\n    });\n    return Promise.all(PromiseAll);\n  },\n  // 修改全部产品的状态\n  updateAllCartIsChecked({\n    dispatch,\n    state\n  }, isChecked) {\n    let PromiseAll = [];\n    state.cartList[0].cartInfoList.forEach(e => {\n      PromiseAll.push(dispatch('updateChekedById', {\n        skuId: e.skuId,\n        isChecked: isChecked\n      }));\n      console.log();\n    });\n    return Promise.all(PromiseAll);\n  }\n};\nconst getters = {\n  cartList(state) {\n    return state.cartList[0] || {};\n  }\n};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":{"version":3,"names":["reqCartList","reqDeleteCartById","reqUpdateChekedByid","state","cartList","mutations","GETCARTLIST","actions","getCartList","commit","result","code","data","deleteCartListBySkuId","skyId","Promise","reject","Error","updateChekedById","skuId","isChecked","deleteAllCheckedCart","dispatch","getters","PromiseAll","cartInfoList","forEach","e","push","all","updateAllCartIsChecked","console","log"],"sources":["C:/Web-Project/Project-SPH/app/src/store/shopcart/index.js"],"sourcesContent":["import { reqCartList, reqDeleteCartById, reqUpdateChekedByid } from '@/api'\r\n\r\nconst state = {\r\n    cartList: []\r\n}\r\nconst mutations = {\r\n    GETCARTLIST(state, cartList) {\r\n        state.cartList = cartList\r\n    }\r\n}\r\nconst actions = {\r\n    // 获取购物车列表数据\r\n    async getCartList({ commit }) {\r\n        let result = await reqCartList()\r\n        if (result.code == 200) {\r\n            commit('GETCARTLIST', result.data)\r\n        }\r\n    },\r\n    // 删除购物车某一物品\r\n    async deleteCartListBySkuId({ commit }, skyId) {\r\n        let result = await reqDeleteCartById(skyId)\r\n        if (result.code == 200) {\r\n            return 'ok'\r\n        }\r\n        else {\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    // 修改购物车选择状态\r\n    async updateChekedById({ commit }, { skuId, isChecked }) {\r\n        let result = await reqUpdateChekedByid(skuId, isChecked)\r\n        if (result.code == 200) {\r\n            return 'ok'\r\n        } else {\r\n            return new Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    // 删除所有勾选的商品\r\n    deleteAllCheckedCart({ dispatch, getters }) {\r\n        // context可以理解为一个小仓库\r\n        // commit 提交mutations修改state    getters 计算属性    dispatch 派发action     state 当前仓库数据\r\n        let PromiseAll = []\r\n        getters.cartList.cartInfoList.forEach(e => {\r\n            PromiseAll.push(e.isChecked == 1 ? dispatch('deleteCartListBySkuId', e.skuId) : '')\r\n        })\r\n        return Promise.all(PromiseAll)\r\n    },\r\n    // 修改全部产品的状态\r\n    updateAllCartIsChecked({ dispatch, state }, isChecked) {\r\n        let PromiseAll = []\r\n        state.cartList[0].cartInfoList.forEach(e => {\r\n            PromiseAll.push(dispatch('updateChekedById', { skuId: e.skuId, isChecked: isChecked }))\r\n            console.log();\r\n\r\n        })\r\n        return Promise.all(PromiseAll)\r\n    }\r\n\r\n}\r\nconst getters = {\r\n    cartList(state) {\r\n        return state.cartList[0] || {}\r\n    }\r\n}\r\n\r\n\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"],"mappings":";AAAA,SAASA,WAAW,EAAEC,iBAAiB,EAAEC,mBAAmB,QAAQ,OAAO;AAE3E,MAAMC,KAAK,GAAG;EACVC,QAAQ,EAAE;AACd,CAAC;AACD,MAAMC,SAAS,GAAG;EACdC,WAAW,CAACH,KAAK,EAAEC,QAAQ,EAAE;IACzBD,KAAK,CAACC,QAAQ,GAAGA,QAAQ;EAC7B;AACJ,CAAC;AACD,MAAMG,OAAO,GAAG;EACZ;EACA,MAAMC,WAAW,CAAC;IAAEC;EAAO,CAAC,EAAE;IAC1B,IAAIC,MAAM,GAAG,MAAMV,WAAW,EAAE;IAChC,IAAIU,MAAM,CAACC,IAAI,IAAI,GAAG,EAAE;MACpBF,MAAM,CAAC,aAAa,EAAEC,MAAM,CAACE,IAAI,CAAC;IACtC;EACJ,CAAC;EACD;EACA,MAAMC,qBAAqB,CAAC;IAAEJ;EAAO,CAAC,EAAEK,KAAK,EAAE;IAC3C,IAAIJ,MAAM,GAAG,MAAMT,iBAAiB,CAACa,KAAK,CAAC;IAC3C,IAAIJ,MAAM,CAACC,IAAI,IAAI,GAAG,EAAE;MACpB,OAAO,IAAI;IACf,CAAC,MACI;MACD,OAAOI,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC7C;EACJ,CAAC;EACD;EACA,MAAMC,gBAAgB,CAAC;IAAET;EAAO,CAAC,EAAE;IAAEU,KAAK;IAAEC;EAAU,CAAC,EAAE;IACrD,IAAIV,MAAM,GAAG,MAAMR,mBAAmB,CAACiB,KAAK,EAAEC,SAAS,CAAC;IACxD,IAAIV,MAAM,CAACC,IAAI,IAAI,GAAG,EAAE;MACpB,OAAO,IAAI;IACf,CAAC,MAAM;MACH,OAAO,IAAII,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,OAAO,CAAC,CAAC;IACjD;EACJ,CAAC;EACD;EACAI,oBAAoB,CAAC;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,EAAE;IACxC;IACA;IACA,IAAIC,UAAU,GAAG,EAAE;IACnBD,OAAO,CAACnB,QAAQ,CAACqB,YAAY,CAACC,OAAO,CAACC,CAAC,IAAI;MACvCH,UAAU,CAACI,IAAI,CAACD,CAAC,CAACP,SAAS,IAAI,CAAC,GAAGE,QAAQ,CAAC,uBAAuB,EAAEK,CAAC,CAACR,KAAK,CAAC,GAAG,EAAE,CAAC;IACvF,CAAC,CAAC;IACF,OAAOJ,OAAO,CAACc,GAAG,CAACL,UAAU,CAAC;EAClC,CAAC;EACD;EACAM,sBAAsB,CAAC;IAAER,QAAQ;IAAEnB;EAAM,CAAC,EAAEiB,SAAS,EAAE;IACnD,IAAII,UAAU,GAAG,EAAE;IACnBrB,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACqB,YAAY,CAACC,OAAO,CAACC,CAAC,IAAI;MACxCH,UAAU,CAACI,IAAI,CAACN,QAAQ,CAAC,kBAAkB,EAAE;QAAEH,KAAK,EAAEQ,CAAC,CAACR,KAAK;QAAEC,SAAS,EAAEA;MAAU,CAAC,CAAC,CAAC;MACvFW,OAAO,CAACC,GAAG,EAAE;IAEjB,CAAC,CAAC;IACF,OAAOjB,OAAO,CAACc,GAAG,CAACL,UAAU,CAAC;EAClC;AAEJ,CAAC;AACD,MAAMD,OAAO,GAAG;EACZnB,QAAQ,CAACD,KAAK,EAAE;IACZ,OAAOA,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;EAClC;AACJ,CAAC;AAGD,eAAe;EACXD,KAAK;EACLE,SAAS;EACTE,OAAO;EACPgB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}